				section
					section
						h1 There is a better way
						h2 What if we:
						ul
							li Factor out DOM interaction
							li Focus on behavior
					section
						h3 List Component
						pre: code(style="width:100%; height: 550px").
							var List = function( selector ) {
								var $el = $( selector ),
									$list = $el.find( "#list" );
								
								return {
									add: function( title, speaker ) {
										var $dt = $( "&lt;dt&gt;" + title + "&lt;/dt&gt;" );
										var $dd = $( "&lt;dd&gt;" + speaker + "&lt;/dd&gt;" );
										$list.append( $dt );
										$list.append( $dd );
									},
									getTitles: function() {
										return $list
												.find( "dt" )
												.map( function() { return $(this).text(); } )
												.get();
									}
								};
							};
					section
						h3 Form Component
						pre: code(style="width:100%; height: 550px").
							var Form = function( selector ) {
								var $el = $( selector ),
									$title = $el.find( "#title" ),
									$speaker = $el.find( "#speaker" ),
									$add = $el.find( "#add" );
								
								return {
									clear: function() {
										this.setTitle( "" );
										this.setSpeaker( "" );
										this.disableAdd();            
									},
									
									getTitle: function() { return $title.val().trim(); },
									setTitle: function( value ) { $title.val( value ); },
									isTitleEmpty: function() { 
										return this.getTitle().trim() === ""; 
									},
									whenTitleChange: function( handler ) { 
										$title.on( "keyup", handler ); 
									},

									getSpeaker: function() { return $speaker.val().trim(); },
									setSpeaker: function( value ) { $speaker.val( value ); },
									isSpeakerEmpty: function() { 
										return this.getSpeaker().trim() === ""; 
									},
									whenSpeakerChange: function( handler ) { 
										$speaker.on( "keyup", handler );
									},

									disableAdd: function() { $add.attr("disabled","disabled"); },
									enableAdd: function() { $add.removeAttr("disabled"); },
									whenAdd: function( handler ) { 
										$add.on( "click", handler ); 
									}
								};
							};					
					section
						h3 Behavior
						pre: code(style="width:100%; height: 550px").
							var behavior = function( list, form ) {

								var addItem = function() {
									list.add( form.getTitle(), form.getSpeaker() );
									form.clear();
								};
								
								var validateForm = function() { 
									var duplicate = _.any( list.getTitles(), function( title ) { 
											return title === newTitle;
										} );
									if( duplicate || form.isTitleEmpty() || form.isSpeakerEmpty() ) {
										form.disableAdd();
									} else {
										form.enableAdd();
									}
								};
								
								form.whenAdd( addItem );
								form.whenTitleChange( validateForm );
								form.whenSpeakerChange( validateForm );
							};
							
							var listControl = new List( "div.container" );
							var formControl = new Form( "div#form" );
							behavior( listControl, formControl );
					section
						h2 Demo
						iframe(style="width: 900px; height: 500px",src="http://jsfiddle.net/a_robson/4yR2h/17/embedded/result",allowfullscreen="allowfullscreen",frameborder="0")
					section
						div
							h3 The Good
							ul
								li DOM interaction is encapsulated
								li jQuery API seperated from logic
								li Easy to understand the behavior
								li Easy to write tests against
								li Easy to maintain and refactor
						br
						br
						div.fragment
							h2 The Bad
							ul
								li MOAR CODE: 77 LoC ( > 100% increase )
						br
						br
					section
						h2 And The Good Wins It
						ul
							li: h3 Decoupled
								ul
									li Distinct components
									li Isolated dependencies	
							li: h3 Clear
								ul
									li Clear responsibilities
									li Less cluttered
									li Intent aligns with components
							li: h3 Maintainable
								ul
									li Changes isolated by component
									li Easy to provide stub implementations